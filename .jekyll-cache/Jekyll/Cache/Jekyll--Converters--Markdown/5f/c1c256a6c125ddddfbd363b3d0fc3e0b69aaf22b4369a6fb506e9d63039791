I"P©<p>This is the first blog about crafting customize control from scratch¬†that I call with epic name ‚ÄúHandmade code‚Äù ;]</p>

<h1 id="something-to-talk-about-ui--ux">Something to talk about UI / UX</h1>

<p>Have you ever downloaded &amp; opened a famous iOS app like Page by FB¬†or something else ? Have you¬†surprised or¬†realized that these app never use ‚Äúold-fashion‚Äù Apple‚Äôs control ?</p>

<p>Today is a new generation ¬†, if you can implement new feature, I can too. It mean. there is no difference, no fence between you and me, same as a developer. So here a question, what thing can make user¬†download¬†my app instead your app ?</p>

<p>To answer this question, I decide make few survey with my friend. 80% answer is something similar about app‚Äôs¬†appearance. If I am asked by you, I also give same answer.</p>

<p>Design UI / UX is a first¬†stage when developing application. As an independent iOS developer, we should have some knowledge about design principle. But in this blog, I should NOT mention it.¬†In the future, I will write some blog what take closer look¬†about¬†it.</p>

<h1 id="parallaxeffect">Parallax¬†Effect</h1>

<p>sParallax scrolling is a special scrolling technique in computer graphics, wherein background images move by the camera slower than foreground images, creating an illusion of depth in a 2D video game and adding to the immersion.</p>

<p>If you are game developer, parallax effect is in your hand.</p>

<p>But right now, I‚Äôm going to bring incredible effect to iOS app. Here is result.</p>

<p>Youtube :</p>

<iframe allowfullscreen="allowfullscreen" frameborder="0" height="315" src="//www.youtube.com/embed/FyJJuCvBNTc" width="420"></iframe>

<h1 id="coding-time">Coding time</h1>

<p>Theory enough, we should take a real action. I will instruct you build customize Table View¬†with Parallax Effect.</p>

<p>Create new project as SingleView Templete, ¬†in this sample, I name ‚ÄúFeParallaxTableView_SampleCode‚Äù. Be sure name your prefix as you like and select devices is iPhone.</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_1.png?resize=731%2C492" alt="SampleCode_ParallaxTableView_1" /></p>

<p>Create class FeParallaxTableView subclass UITableView. This is main class we will deal all time.</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_3.png?resize=536%2C175" alt="SampleCode_ParallaxTableView_3" /></p>

<p>Next, create new class call ‚ÄúFeCell‚Äù sublcass UITableViewCell. Make sure you do NOT select ‚ÄúCreate XIB file‚Äù option and select iPhone in dropbox.</p>

<p>In fact, you need avoid creating XIB file. You should create cell¬†programmatically</p>

<p>Because<strong>You cannot change the frame of an object if you‚Äôve put it through Interface Builder.</strong></p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_4.png?resize=537%2C187" alt="SampleCode_ParallaxTableView_4" /></p>

<p>Here project look like</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_5.png?resize=260%2C430" alt="SampleCode_ParallaxTableView_5" /></p>

<h1 id="photo-bundle">Photo Bundle</h1>

<p>For saving your time, I prepared for you Photo Bundle. You can download it at <a href="http://www.mediafire.com/download/l367m8hd4sfuwmr/PhotoBundle.zip">Mediafire</a></p>

<p>Extract it, and see in there.</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_6.png?resize=417%2C181" alt="SampleCode_ParallaxTableView_6" /></p>

<p>This bundle include 8 photos of big city in the world, and a Plist file. This plist file will help me parse data to app easily than more. If you open it, it simple a array contain name of string as each row.</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_7.png?resize=598%2C282" alt="SampleCode_ParallaxTableView_7" /></p>

<h1 id="delegation-pattern">Delegation Pattern</h1>

<p>FeParallaxTabbleView use pattern similar UITableView. It mean, we should have 2 protocol. One is DataSource with provide data for own custom table view, and one is Delegate has some useful method.</p>

<p>Now, open FeParallaxTableView.h and add some code :</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@protocol</span> <span class="nc">FeParallaxTableViewDataSource</span><span class="p">;</span>
<span class="k">@protocol</span> <span class="nc">FeParallaxTableViewDelegate</span><span class="p">;</span>
 
<span class="k">@interface</span> <span class="nc">FeParallaxTableView</span> <span class="p">:</span> <span class="nc">UITableView</span>
 
<span class="c1">// Delegate</span>
<span class="k">@property</span> <span class="p">(</span><span class="n">weak</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">id</span><span class="o">&lt;</span><span class="n">FeParallaxTableViewDataSource</span><span class="o">&gt;</span> <span class="n">delegateParallax</span><span class="p">;</span>
 
<span class="k">@end</span>
 
 
<span class="c1">////////////////</span>
<span class="c1">// Data source</span>
<span class="k">@protocol</span> <span class="nc">FeParallaxTableViewDataSource</span> <span class="o">&lt;</span><span class="n">NSObject</span><span class="o">&gt;</span>
<span class="err">@required</span>
 
<span class="c1">// Image for cell at indexpath</span>
<span class="k">-</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span> <span class="nf">FeParallaxTableView</span><span class="p">:(</span><span class="n">FeParallaxTableView</span> <span class="o">*</span><span class="p">)</span> <span class="n">sender</span> <span class="n">imageForCellAtIndexPath</span><span class="o">:</span><span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span> <span class="n">indexPath</span><span class="p">;</span>
 
<span class="c1">// Title for cell</span>
<span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="nf">FeParallaxTableView</span><span class="p">:(</span><span class="n">FeParallaxTableView</span> <span class="o">*</span><span class="p">)</span> <span class="n">sender</span> <span class="n">titleForCellAtIndexPath</span><span class="o">:</span><span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span> <span class="n">indexPath</span><span class="p">;</span>
 
<span class="c1">// number Of Row</span>
<span class="k">-</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span> <span class="n">numberOfRowForParallaxCell</span><span class="p">;</span>
 
<span class="k">@end</span>
 
<span class="c1">////////////////</span>
<span class="c1">// Delegate</span>
<span class="k">@protocol</span> <span class="nc">FeParallaxTableViewDelegate</span> <span class="o">&lt;</span><span class="n">NSObject</span><span class="o">&gt;</span>
 
<span class="c1">// Add late</span>
 
<span class="k">@end</span>
</code></pre></div></div>

<p>We have 2 important method in Data source here. As you¬†this name call, this method will provide image for each cell at specific index path.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Image for cell at indexpath</span>
<span class="k">-</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span> <span class="nf">FeParallaxTableView</span><span class="p">:(</span><span class="n">FeParallaxTableView</span> <span class="o">*</span><span class="p">)</span> <span class="n">sender</span> <span class="n">imageForCellAtIndexPath</span><span class="o">:</span><span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span> <span class="n">indexPath</span><span class="p">;</span>
</code></pre></div></div>

<p>and the rest method will provide title for each cell</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Title for cell </span>
<span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="nf">FeParallaxTableView</span><span class="p">:(</span><span class="n">FeParallaxTableView</span> <span class="o">*</span><span class="p">)</span> <span class="n">sender</span> <span class="n">titleForCellAtIndexPath</span><span class="o">:</span><span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span> <span class="n">indexPath</span><span class="p">;</span>
</code></pre></div></div>

<p>Switch to .m file</p>

<p>We override initalization method.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">-</span> <span class="p">(</span><span class="n">id</span><span class="p">)</span><span class="nf">initWithFrame</span><span class="p">:(</span><span class="n">CGRect</span><span class="p">)</span><span class="nv">frame</span>
<span class="p">{</span>
    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nf">initWithFrame</span><span class="p">:</span><span class="n">frame</span><span class="p">];</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="c1">// Initialization code</span>
        
        <span class="n">self</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
        <span class="n">self</span><span class="p">.</span><span class="n">dataSource</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
        <span class="n">self</span><span class="p">.</span><span class="n">separatorStyle</span> <span class="o">=</span> <span class="n">UITableViewCellSeparatorStyleNone</span><span class="p">;</span>
        
        <span class="c1">// Register</span>
        <span class="p">[</span><span class="n">self</span> <span class="nf">registerClass</span><span class="p">:[</span><span class="n">FeCell</span> <span class="nf">class</span><span class="p">]</span> <span class="nf">forCellReuseIdentifier</span><span class="p">:</span><span class="n">kFeCellID</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Make sure your already import FeCell and conform TableView‚Äôs protocol. And define new const for cell‚Äôs ID.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#define kFeCellID @"FeCell"
</span></code></pre></div></div>

<p>Add data source‚Äôs method</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">-</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span> <span class="nf">numberOfRowsInSection</span><span class="p">:(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">section</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span> <span class="nf">tableView</span><span class="p">:(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">heightForRowAtIndexPath</span><span class="p">:(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="mi">180</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span> <span class="nf">tableView</span><span class="p">:(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">numberOfRowsInSection</span><span class="p">:(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">section</span>
<span class="p">{</span>
    <span class="n">NSUInteger</span> <span class="n">numberOfCell</span> <span class="o">=</span> <span class="p">[</span><span class="n">_delegateParallax</span> <span class="nf">numberOfRowForParallaxCell</span><span class="p">];</span>
    <span class="k">return</span> <span class="n">numberOfCell</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="n">UITableViewCell</span> <span class="o">*</span><span class="p">)</span> <span class="nf">tableView</span><span class="p">:(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">cellForRowAtIndexPath</span><span class="p">:(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
<span class="p">{</span>
    <span class="n">FeCell</span> <span class="o">*</span><span class="n">cell</span> <span class="o">=</span> <span class="p">[</span><span class="n">tableView</span> <span class="nf">dequeueReusableCellWithIdentifier</span><span class="p">:</span><span class="n">kFeCellID</span> <span class="nf">forIndexPath</span><span class="p">:</span><span class="n">indexPath</span><span class="p">];</span>
    
    <span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">tableView</span><span class="p">:(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">willDisplayCell</span><span class="p">:(</span><span class="n">UITableViewCell</span> <span class="o">*</span><span class="p">)</span><span class="nv">cell</span> <span class="nf">forRowAtIndexPath</span><span class="p">:(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
<span class="p">{</span>
 
<span class="p">}</span>
</code></pre></div></div>

<p>Here we provide number of cell via method numberOfRowForParallaxCell, and return 1 section.</p>

<h1 id="fecell">FeCell</h1>

<p>Now, switch FeCell.m file. Add some property</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">@interface</span> <span class="nc">FeCell</span> <span class="p">()</span>
<span class="c1">// Photo</span>
<span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UIImageView</span> <span class="o">*</span><span class="n">photoView</span><span class="p">;</span>
 
<span class="c1">// Title</span>
<span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">UILabel</span> <span class="o">*</span><span class="n">titleLbl</span><span class="p">;</span>
<span class="k">@end</span>
</code></pre></div></div>

<p>and add 2 helper methods in .h file.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">configureWithPhoto</span><span class="p">:(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span> <span class="n">image</span> <span class="n">title</span><span class="o">:</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="n">title</span><span class="p">;</span>
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">configureFramePhoto</span><span class="p">:(</span><span class="n">CGRect</span><span class="p">)</span> <span class="n">frame</span><span class="p">;</span>
</code></pre></div></div>

<p>and .m file.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">-</span><span class="p">(</span><span class="n">instancetype</span><span class="p">)</span> <span class="nf">initWithStyle</span><span class="p">:(</span><span class="n">UITableViewCellStyle</span><span class="p">)</span><span class="nv">style</span> <span class="nf">reuseIdentifier</span><span class="p">:(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">reuseIdentifier</span>
<span class="p">{</span>
    <span class="n">self</span> <span class="o">=</span> <span class="p">[</span><span class="n">super</span> <span class="nf">initWithStyle</span><span class="p">:</span><span class="n">style</span> <span class="nf">reuseIdentifier</span><span class="p">:</span><span class="n">reuseIdentifier</span><span class="p">];</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">self</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="p">[</span><span class="n">self</span> <span class="nf">initSubView</span><span class="p">];</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">self</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">initSubView</span>
<span class="p">{</span>
    <span class="c1">/////////////</span>
    <span class="c1">// Photo</span>
    <span class="n">_photoView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UIImageView</span> <span class="nf">alloc</span><span class="p">]</span> <span class="nf">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">568</span><span class="p">)];</span>
    <span class="n">_photoView</span><span class="p">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="n">UIViewContentModeScaleAspectFill</span><span class="p">;</span>
    
    <span class="c1">////////////</span>
    <span class="c1">// Title</span>
    <span class="n">_titleLbl</span> <span class="o">=</span> <span class="p">[[</span><span class="n">UILabel</span> <span class="nf">alloc</span><span class="p">]</span> <span class="nf">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">320</span><span class="p">,</span> <span class="mi">180</span><span class="p">)];</span>
    <span class="n">_titleLbl</span><span class="p">.</span><span class="n">textAlignment</span> <span class="o">=</span> <span class="n">NSTextAlignmentCenter</span><span class="p">;</span>
    <span class="n">_titleLbl</span><span class="p">.</span><span class="n">font</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIFont</span> <span class="nf">systemFontOfSize</span><span class="p">:</span><span class="mi">44</span><span class="p">];</span>
    <span class="n">_titleLbl</span><span class="p">.</span><span class="n">textColor</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIColor</span> <span class="nf">whiteColor</span><span class="p">];</span>
    
    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">contentView</span> <span class="nf">addSubview</span><span class="p">:</span><span class="n">_photoView</span><span class="p">];</span>
    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">contentView</span> <span class="nf">addSubview</span><span class="p">:</span><span class="n">_titleLbl</span><span class="p">];</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">configureWithPhoto</span><span class="p">:(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nv">image</span> <span class="nf">title</span><span class="p">:(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">title</span>
<span class="p">{</span>
    <span class="n">_photoView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">image</span><span class="p">;</span>
    <span class="n">_titleLbl</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">title</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">configureFramePhoto</span><span class="p">:(</span><span class="n">CGRect</span><span class="p">)</span><span class="nv">frame</span>
<span class="p">{</span>
    <span class="n">_photoView</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">frame</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Do you notice I set frame for photoView with 568 px as height ? There is a reason for this.</p>

<h1 id="first-testing">First testing</h1>

<p>We have just implemented some necessary method in FeParallaxTableView and FeCell for the first test. So the next step, we should test it, make sure it work ;]</p>

<p>Go back to FeViewController.m file. Import two own file and conform¬†FeParallaxTableView‚Äôs data source. And copy this code to interface :</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Table View</span>
<span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">FeParallaxTableView</span> <span class="o">*</span><span class="n">tableView</span><span class="p">;</span>
 
<span class="c1">// Arr of image</span>
<span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">arrPhotos</span><span class="p">;</span>
 
<span class="c1">// Arr of title</span>
<span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">arrTitles</span><span class="p">;</span>
 
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">initPhoto</span><span class="p">;</span>
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">initTableView</span><span class="p">;</span>
</code></pre></div></div>

<p>As your expectation, we should read City.plist and parse data to Photo array and Title Array.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">viewDidLoad</span>
<span class="p">{</span>
    <span class="p">[</span><span class="n">super</span> <span class="nf">viewDidLoad</span><span class="p">];</span>
	<span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
    
    <span class="p">[</span><span class="n">self</span> <span class="nf">initPhoto</span><span class="p">];</span>
    
    <span class="p">[</span><span class="n">self</span> <span class="nf">initTableView</span><span class="p">];</span>
<span class="p">}</span>
 
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">initPhoto</span>
<span class="p">{</span>
    <span class="c1">// Get photo from plist file</span>
    <span class="c1">// Path</span>
    <span class="n">NSString</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NSBundle</span> <span class="nf">mainBundle</span><span class="p">]</span> <span class="nf">pathForResource</span><span class="p">:</span><span class="s">@"City"</span> <span class="nf">ofType</span><span class="p">:</span><span class="s">@"plist"</span><span class="p">];</span>
    
    <span class="c1">// - 1</span>
    <span class="n">_arrTitles</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSArray</span> <span class="nf">arrayWithContentsOfFile</span><span class="p">:</span><span class="n">path</span><span class="p">];</span>
    
    <span class="c1">// - 2</span>
    <span class="n">_arrPhotos</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSMutableArray</span> <span class="nf">arrayWithCapacity</span><span class="p">:</span><span class="n">_arrTitles</span><span class="p">.</span><span class="n">count</span><span class="p">];</span>
    
    <span class="c1">// - 3</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="n">namePhoto</span> <span class="k">in</span> <span class="n">_arrTitles</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">NSString</span> <span class="o">*</span><span class="n">fullNamePhoto</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSString</span> <span class="nf">stringWithFormat</span><span class="p">:</span><span class="s">@"%@.jpg"</span><span class="p">,</span><span class="n">namePhoto</span><span class="p">];</span>
        <span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nf">imageNamed</span><span class="p">:</span><span class="n">fullNamePhoto</span><span class="p">];</span>
        
        <span class="p">[</span><span class="n">_arrPhotos</span> <span class="nf">addObject</span><span class="p">:</span><span class="n">image</span><span class="p">];</span>
    <span class="p">}</span>
    
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="n">initTableView</span>
<span class="p">{</span>
    <span class="n">_tableView</span> <span class="o">=</span> <span class="p">[[</span><span class="n">FeParallaxTableView</span> <span class="nf">alloc</span><span class="p">]</span> <span class="nf">initWithFrame</span><span class="p">:</span><span class="n">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">];</span>
    <span class="n">_tableView</span><span class="p">.</span><span class="n">delegateParallax</span> <span class="o">=</span> <span class="n">self</span><span class="p">;</span>
    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">view</span> <span class="nf">addSubview</span><span class="p">:</span><span class="n">_tableView</span><span class="p">];</span>
<span class="p">}</span>
</code></pre></div></div>

<ol>
  <li>¬†Just part plist file to Title array</li>
  <li>Init Photo array with capacity equal with titleArray‚Äôs count.</li>
  <li>Init UIImage with each name and add to Photo Array.</li>
</ol>

<p>And implement required method.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#pragma mark - FeParallax Table View
</span><span class="k">-</span><span class="p">(</span><span class="n">UIImage</span> <span class="o">*</span><span class="p">)</span> <span class="nf">FeParallaxTableView</span><span class="p">:(</span><span class="n">FeParallaxTableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">sender</span> <span class="nf">imageForCellAtIndexPath</span><span class="p">:(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
<span class="p">{</span>
    <span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="n">_arrPhotos</span><span class="p">[</span><span class="n">indexPath</span><span class="p">.</span><span class="nf">row</span><span class="p">];</span>
    <span class="k">return</span> <span class="n">image</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="n">NSString</span> <span class="o">*</span><span class="p">)</span> <span class="nf">FeParallaxTableView</span><span class="p">:(</span><span class="n">FeParallaxTableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">sender</span> <span class="nf">titleForCellAtIndexPath</span><span class="p">:(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
<span class="p">{</span>
    <span class="n">NSString</span> <span class="o">*</span><span class="n">title</span> <span class="o">=</span> <span class="n">_arrTitles</span><span class="p">[</span><span class="n">indexPath</span><span class="p">.</span><span class="nf">row</span><span class="p">];</span>
    
    <span class="k">return</span> <span class="n">title</span><span class="p">;</span>
<span class="p">}</span>
<span class="k">-</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span> <span class="n">numberOfRowForParallaxCell</span>
<span class="p">{</span>
    <span class="k">return</span> <span class="n">_arrPhotos</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Click run on iPhone 4‚Ä≥ and here is result.</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_10.png?resize=214%2C380" alt="SampleCode_ParallaxTableView_10" /></p>

<p>Before continue reading, confirm you has same result as photo above.</p>

<p>Next step, we add some code to bring photo to each cell.</p>

<p>Now, Go back FeParallaxTableView.m file and look at cellAtIndexPath method.</p>

<p>We need some code to add photo and title into cell.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">-</span><span class="p">(</span><span class="n">UITableViewCell</span> <span class="o">*</span><span class="p">)</span> <span class="nf">tableView</span><span class="p">:(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">cellForRowAtIndexPath</span><span class="p">:(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
<span class="p">{</span>
    <span class="n">FeCell</span> <span class="o">*</span><span class="n">cell</span> <span class="o">=</span> <span class="p">[</span><span class="n">tableView</span> <span class="nf">dequeueReusableCellWithIdentifier</span><span class="p">:</span><span class="n">kFeCellID</span> <span class="nf">forIndexPath</span><span class="p">:</span><span class="n">indexPath</span><span class="p">];</span>
    
    <span class="c1">// Clip to bound</span>
    <span class="n">cell</span><span class="p">.</span><span class="n">clipsToBounds</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
    <span class="n">cell</span><span class="p">.</span><span class="n">contentMode</span> <span class="o">=</span> <span class="n">UIViewContentModeScaleAspectFill</span><span class="p">;</span>
    
    <span class="c1">// Get photo</span>
    <span class="n">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">_delegateParallax</span> <span class="nf">FeParallaxTableView</span><span class="p">:</span><span class="n">self</span> <span class="nf">imageForCellAtIndexPath</span><span class="p">:</span><span class="n">indexPath</span><span class="p">];</span>
    <span class="n">NSString</span> <span class="o">*</span><span class="n">title</span> <span class="o">=</span> <span class="p">[</span><span class="n">_delegateParallax</span> <span class="nf">FeParallaxTableView</span><span class="p">:</span><span class="n">self</span> <span class="nf">titleForCellAtIndexPath</span><span class="p">:</span><span class="n">indexPath</span><span class="p">];</span>
    
    <span class="c1">// Configure</span>
    <span class="p">[</span><span class="n">cell</span> <span class="nf">configureWithPhoto</span><span class="p">:</span><span class="n">image</span> <span class="nf">title</span><span class="p">:</span><span class="n">title</span><span class="p">];</span>
 
    <span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Run it again.</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_11.png?resize=242%2C430" alt="SampleCode_ParallaxTableView_11" /></p>

<p>Look beautiful, but if you take closer look, you should notice something wrong. Photo in each cell do NOT same as we expect.</p>

<p>Let check sample photo again.</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_13.png?resize=242%2C430" alt="SampleCode_ParallaxTableView_13" /></p>

<p>With closer look, we can see, our expectation is not the same as It¬†should be. The position of photo in each cells is different. So, go back to resource folder, look each photo again, you may realize that photo‚Äôs¬†offset was transform by denta.</p>

<p>Now the time we should deal with new delegate method, are available¬†in iOS 7.</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">tableView</span><span class="p">:(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">willDisplayCell</span><span class="p">:(</span><span class="n">UITableViewCell</span> <span class="o">*</span><span class="p">)</span><span class="nv">cell</span> <span class="nf">forRowAtIndexPath</span><span class="p">:(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
<span class="p">{</span>
   <span class="c1">//1</span>
    <span class="n">FeCell</span> <span class="o">*</span><span class="n">feCell</span> <span class="o">=</span> <span class="p">(</span><span class="n">FeCell</span> <span class="o">*</span><span class="p">)</span> <span class="n">cell</span><span class="p">;</span>
    
    <span class="c1">//2</span>
    <span class="c1">// Frame</span>
    <span class="n">CGFloat</span> <span class="n">cellY</span> <span class="o">=</span> <span class="n">feCell</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
    <span class="n">CGFloat</span> <span class="n">denta</span> <span class="o">=</span> <span class="n">cellY</span> <span class="o">-</span> <span class="n">self</span><span class="p">.</span><span class="n">contentOffset</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
 
    <span class="c1">//3    </span>
    <span class="p">[</span><span class="n">feCell</span> <span class="nf">configureFramePhoto</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="n">denta</span>  <span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
<span class="p">}</span>
</code></pre></div></div>

<p>This is <strong>[tableview:willDisplayCell:forRowAtIndexPath]</strong>. This method will be call when new cell will display into tableView. Because, this method is called after [tableView:cellForRowAtIndexPath:], it mean, your cell is already initializer. It‚Äôs useful when you want to apply transform to cell before cell will be display.</p>

<p>But, you should¬†bear in mind that it‚Äôs only available in iOS 7 and above.</p>

<p>So, I explain what i did :</p>

<ol>
  <li>Just cast original cell to FeCell. Because, we will use own method in the next step.</li>
  <li>If you are brainy guy, the denta property may figure out by subtracting cell‚Äôs y offset to UITableView‚Äôs contentOffset y.</li>
  <li>Just transform UIImageView with this denta.</li>
</ol>

<p>Run it, and check it out ;]</p>

<p><img src="https://raw.githubusercontent.com/NghiaTranUIT/nghiatranuit.github.io/master/resources/2014/06/SampleCode_ParallaxTableView_14.png?resize=215%2C382" alt="SampleCode_ParallaxTableView_14" /></p>

<p>Everything is OK, but when you scroll, something went wrong ;[. Don‚Äôt need to be disappointed. We will make it work correctly right now.</p>

<p>So,we ¬†add some code below :</p>

<div class="language-objc highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">-</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="nf">scrollViewDidScroll</span><span class="p">:(</span><span class="n">UIScrollView</span> <span class="o">*</span><span class="p">)</span><span class="nv">scrollView</span>
<span class="p">{</span>
    <span class="k">for</span> <span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="n">indexPath</span> <span class="k">in</span> <span class="n">self</span><span class="p">.</span><span class="n">indexPathsForVisibleRows</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">FeCell</span> <span class="o">*</span><span class="n">cell</span> <span class="o">=</span> <span class="p">(</span><span class="n">FeCell</span> <span class="o">*</span><span class="p">)[</span><span class="n">self</span> <span class="nf">cellForRowAtIndexPath</span><span class="p">:</span><span class="n">indexPath</span><span class="p">];</span>
        
        <span class="n">CGFloat</span> <span class="n">cellY</span> <span class="o">=</span> <span class="n">cell</span><span class="p">.</span><span class="n">frame</span><span class="p">.</span><span class="n">origin</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
        <span class="n">CGFloat</span> <span class="n">denta</span> <span class="o">=</span> <span class="n">cellY</span> <span class="o">-</span> <span class="n">self</span><span class="p">.</span><span class="n">contentOffset</span><span class="p">.</span><span class="n">y</span><span class="p">;</span>
        
        <span class="p">[</span><span class="n">cell</span> <span class="nf">configureFramePhoto</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="n">denta</span> <span class="p">,</span> <span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span><span class="n">self</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>In this time, we use [scrollViewDidScroll:] method. If you are beginner, you may have some question like :‚ÄùHey, I don‚Äôt see any UIScrollView in app from begin this blog, why is it ? ‚Äù or ‚ÄúWhy can I still use [scollViewDidScroll:] even my class do NOT conform <UIScrollViewDelegate> ? or something else..</UIScrollViewDelegate></p>

<p>Here is answer. TableView is build on top UIScrollView, It mean, there is UIScrollView inside UITableView, and we can use¬†any delegate‚Äôs method¬†comfortable. We don‚Äôt need to conform [UIScrollViewDelegate].</p>

<p>Look at this block code above, It‚Äôs similar what we did in [tableView:willDisplayCell:‚Ä¶]. Just a bit different. I enumerate each cell which is visible, and apply transform.</p>

<p>Run it again. This is what we want it to be ;]</p>

<p><a href="http://www.mediafire.com/download/e0fehra19v4f1f9/FeParallaxTableView_SampleCode_Part_1.zip">Download Mediafire</a></p>

<h1 id="the-end">The end</h1>

<p>To implementing customize control, we should¬†have a deep knowledge about original Apple‚Äôs control. As we did, using original control is very simple, but to build new control depend on what they look is another side. It‚Äôs not easy.</p>

<p>In this blog, I covered what we need to build a customize control. And the next, I will improve it, create new¬†behaviour.</p>

<p>Thank for reading. Please drop comment if you have questions.</p>
:ET